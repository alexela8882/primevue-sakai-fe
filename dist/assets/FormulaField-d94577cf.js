import{a4 as E,a7 as n,r as b,aY as F,G as I,E as N,t as P}from"./index-2f40471b.js";function j(){const{extractFieldinExpressionFormat:v,extractEntityinExpressionFormat:t}=E();function d(e,r,i,s){var f=o(e),a=null,l={status:"500",value:!1,message:""};if(f==!1)l.message="Postfix is not valid. Some tokens is not recognized";else{var u=e;if(typeof u!="string")if(u instanceof String)u=u.toString();else return null;var x=u.match(/([a-z][a-z0-9]*(_[a-z0-9]+)*)/gi);console.log(x);var m={};n.forEach(x,function(p){var _=t(p)?t(p):i,h=v(p);s>=0&&n.has(r[s],h)&&(m[p]=r[s][h]),(n.has(r[_],h)||n.has(r,h))&&(m[p]=r[h])}),console.log(m);var z=n.uniq(x),S=n.values(m);console.log(z,S),a=g(f,m),l.status=200,l.value=a,l.message="Success"}return l}function y(e,r,i){if(e=="+")return r+i;if(e=="-")return r-i;if(e=="*")return r*i;if(e=="/")return r/i}function g(e,r){var i=e,s=[],f=0,a=[];return console.log("tokens",i),i.forEach((l,u)=>{if(console.log(l),l!=""){if(l.match(/([a-z][a-z0-9]*(_[a-z0-9]+)*)/g))s.push(r[l]);else if(l.match(/(\d*\.)?\d+/g))s.push(l);else{for(f=0;f<2;)a.push(s.pop()),f++;s.push(y(l,a[1],a[0])),a=[]}console.log(s)}}),s}function c(e){return e=="("||e==")"?0:e=="+"||e=="-"?1:e=="*"||e=="/"?2:-1}function o(e){var r=e;if(typeof r!="string")if(r instanceof String)r=r.toString();else return null;var i=[],s=[],f=r.match(/([a-z][a-z0-9]*(_[a-z0-9]+)*)|([()+\-*/])|((\d*\.)?\d+)/gi);for(f.forEach(function(a){r=r.replace(a,"")}),Array.isArray(f)&&f.forEach((a,l)=>{if(c(a)==-1)i.push(a);else if(a=="(")s.push(a);else if(a==")")for(var u=s.pop();u!="(";)i.push(u),u=s.pop();else{for(;!n.isEmpty(s)&&c(s[s.length-1])>=c(a);)i.push(s.pop());s.push(a)}});!n.isEmpty(s);)i.push(s.pop());return i.length>=1?i:!1}return{parseExpression:d}}const M={__name:"FormulaField",props:{field:Object,keyName:String,module:String,mutableIndex:Number,entity:String},setup(v){const t=v;E();const{parseExpression:d}=j(),y=b(0),g=F("form");I(g.value.values[t.keyName][t.mutableIndex],(o,e)=>{console.log("changed",o,e),c()}),N(()=>{c()});const c=()=>{if(t.field.formulaType=="currency"||t.field.formulaType=="number"){g.value.values[t.keyName][t.mutableIndex];let o=d(t.field.formulaExpression,g.value.values[t.keyName],t.entity,t.mutableIndex);console.log(t.field.name,t.field.formulaExpression,o)}};return(o,e)=>P(y.value)}};export{M as default};
